{
  "name": "@dungeon-adventure/inventory",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/inventory/src",
  "projectType": "library",
  "tags": [],
  "metadata": {
    "generator": "ts#project"
  },
  "targets": {
    "build": {
      "dependsOn": ["lint", "compile", "test", "bundle", "docker"]
    },
    "compile": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist/packages/inventory/tsc"],
      "options": {
        "command": "tsc --build tsconfig.lib.json",
        "cwd": "{projectRoot}"
      }
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{options.reportsDirectory}"],
      "options": {
        "reportsDirectory": "../../coverage/packages/inventory"
      }
    },
    "bundle": {
      "cache": true,
      "outputs": ["{workspaceRoot}/dist/{projectRoot}/bundle"],
      "executor": "nx:run-commands",
      "options": {
        "command": "rolldown -c rolldown.config.ts",
        "cwd": "{projectRoot}"
      },
      "dependsOn": ["compile"]
    },
    "inventory-mcp-server-docker": {
      "cache": true,
      "executor": "nx:run-commands",
      "options": {
        "command": "docker build --platform linux/arm64 -t dungeon-adventure-inventory-mcp-server:latest packages/inventory/src/mcp-server --build-context workspace=."
      },
      "dependsOn": ["bundle"]
    },
    "docker": {
      "dependsOn": ["inventory-mcp-server-docker"]
    },
    "mcp-server-serve-stdio": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["tsx --watch ./src/mcp-server/stdio.ts"],
        "cwd": "{projectRoot}"
      }
    },
    "mcp-server-serve-http": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["tsx --watch ./src/mcp-server/http.ts"],
        "cwd": "{projectRoot}"
      }
    },
    "mcp-server-inspect": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["mcp-inspector -- tsx --watch ./src/mcp-server/stdio.ts"],
        "cwd": "{projectRoot}"
      }
    }
  }
}
